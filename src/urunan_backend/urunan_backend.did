type ExpenseDetail = record {
  tag : vec text;
  title : text;
  split_mode : SplitBillMode;
  description : text;
  currency : text;
  timestamp : nat64;
  amount : float64;
};
type Metrics = record { total_errors : nat64; total_api_requests : nat64 };
type PaymentStatus = variant { Filled; Cancelled; Created; Settled };
type SplitBillDebtor = record {
  username : text;
  payment_status : opt PaymentStatus;
  expense_id : nat;
  amount : float64;
};
type SplitBillMode = variant { Portion; Evenly; PerPurchase };
type User = record {
  username : text;
  created_at : nat64;
  full_name : text;
  avatar : text;
};
service : {
  find_user : (text) -> (User) query;
  get_cycles_balance : () -> (nat64) query;
  get_metrics : () -> (Metrics) query;
  get_my_profile : () -> (User) query;
  is_my_user_exist : () -> (bool) query;
  is_username_available : (text) -> (bool) query;
  new_expense : (ExpenseDetail, vec SplitBillDebtor) -> (nat);
  new_user : (User) -> ();
  put_user_avatar : (text) -> ();
  put_user_full_name : (text) -> ();
}
